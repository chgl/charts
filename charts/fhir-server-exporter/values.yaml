# Default values for hapi-fhir-jpaserver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# the URL of the FHIR server whose metrics should be scraped. Interpreted as a template.
fhirServerUrl: ""

# the name of the FHIR server (included in the metrics as `server_name`). Interpreted as a template.
fhirServerName: ""

# FHIR server exporter fetch interval in seconds
fetchIntervalSeconds: 300

serviceMonitor:
  # if enabled, creates a ServiceMonitor instance for Prometheus Operator-based monitoring
  enabled: false
  # additional labels to apply to the ServiceMonitor object, e.g. `release: prometheus`
  additionalLabels: {}
  # namespace: monitoring
  # interval: 30s
  # scrapeTimeout: 10s

# number of replicas
replicaCount: 1

# the exporter image
image: # +doc-gen:ignore
  registry: ghcr.io
  repository: chgl/fhir-server-exporter
  tag: v2.1.9@sha256:96b7ee39fee0da17af24b23071671c193bfa043dd1bd061370d5d280001e00dd
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# annotations applied to the server deployment
deploymentAnnotations: {}

# annotations applied to the server pod
podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext: # +doc-gen:ignore
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65532
  runAsGroup: 65532
  seccompProfile:
    type: RuntimeDefault

service:
  type: ClusterIP
  port: 8080

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# readiness probe
readinessProbe: # +doc-gen:ignore
  failureThreshold: 5
  initialDelaySeconds: 30
  periodSeconds: 20
  successThreshold: 1
  timeoutSeconds: 20

# readiness probe
livenessProbe: # +doc-gen:ignore
  failureThreshold: 5
  initialDelaySeconds: 30
  periodSeconds: 20
  successThreshold: 1
  timeoutSeconds: 20

# extra env vars to set on the fhir-server-exporter container
extraEnv: []
# - name: "FOO"
#   value: "BAR"

# specify custom queries as a list of `name`, `query` and `description` objects.
# see <https://github.com/chgl/fhir-server-exporter#custom-queries> for details.
customQueries:
  []
  # - name: fhir_male_patient_count
  #   query: Patient?gender=male
  #   description: Male patients
  # - name: fhir_female_patient_count
  #   query: Patient?gender=female

# @ignored
curl: # +doc-gen:ignore
  image:
    registry: docker.io
    repository: curlimages/curl
    tag: 8.1.2@sha256:fcf8b68aa7af25898d21b47096ceb05678665ae182052283bd0d7128149db55f

podDisruptionBudget:
  # create a PodDisruptionBudget resource for the pods
  enabled: false
  # Minimum available instances; ignored if there is no PodDisruptionBudget
  minAvailable: 1
  # Maximum unavailable instances; ignored if there is no PodDisruptionBudget
  maxUnavailable: ""

# pod topology spread configuration
# see: <https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#api>
topologySpreadConstraints:
  []
  # - maxSkew: 1
  #   topologyKey: topology.kubernetes.io/zone
  #   whenUnsatisfiable: ScheduleAnyway
  #   labelSelector:
  #     matchLabels:
  #       app.kubernetes.io/instance: my-fhir-server-exporter
  #       app.kubernetes.io/name: fhir-server-exporter
