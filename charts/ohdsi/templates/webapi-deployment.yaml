{{- with .Values.webApi }}
{{- if .enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ohdsi.fullname" $ }}-webapi
  labels:
    {{- include "ohdsi.labels" $ | nindent 4 }}
    app.kubernetes.io/name: {{ include "ohdsi.name" $ }}-webapi
    app.kubernetes.io/instance: {{ $.Release.Name }}-webapi
  {{- with $.Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "ohdsi.name" $ }}-webapi
      app.kubernetes.io/instance: {{ $.Release.Name }}-webapi
  template:
    metadata:
    {{- with $.Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "ohdsi.name" $ }}-webapi
        app.kubernetes.io/instance: {{ $.Release.Name }}-webapi
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .podSecurityContext | nindent 8 }}
      {{- if $.Values.postgresql.enabled }}
      initContainers:
        - name: wait-for-db
          image: busybox:1.32
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            privileged: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 11111
            runAsGroup: 11111
          command: ["sh", "-c", "while ! nc -z {{ $.Release.Name }}-postgresql 5432 -w 5; do echo $(date) waiting for database; sleep 5; done;"]
      {{- end }}
      containers:
        - name: webapi
          securityContext:
            {{- toYaml .securityContext | nindent 12 }}
          image: "{{ .image.registry }}/{{ .image.repository }}:{{ .image.tag }}"
          imagePullPolicy: {{ .image.pullPolicy }}
          env:
            - name: SECURITY_CORS_ENABLED
              value: {{ .cors.enabled | quote }}
            {{- if and .cors.enabled (or .cors.allowedOrigin $.Values.ingress.enabled) }}
            - name: SECURITY_ORIGIN
              {{- if $.Values.ingress.enabled}}
              {{- $host := (index $.Values.ingress.hosts 0) }}
              value: {{ $host.host | quote }}
              {{- else if .cors.allowedOrigin }}
              value: {{ .cors.allowedOrigin | quote }}
              {{- end }}
            {{- end }}
            - name: DATASOURCE_URL
              value: {{ include "ohdsi.webapi.jdbcUrl" $ }}
            - name: DATASOURCE_USERNAME
              value: {{ .db.username }}
            - name: DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "ohdsi.webapi.db-secret-name" $ }}
                  {{- if .db.existingSecret }}
                  key: {{ .db.existingSecretKey }}
                  {{- else }}
                  key: "postgresql-password"
                  {{- end }}
            - name: DATASOURCE_OHDSI_SCHEMA
              value: {{ .db.schema }}
            - name: SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA
              value: {{ .db.schema }}
            - name: FLYWAY_SCHEMAS
              value: {{ .db.schema }}
            - name: FLYWAY_PLACEHOLDERS_OHDSISCHEMA
              value: {{ .db.schema }}
            - name: FLYWAY_DATASOURCE_URL
              value: {{ include "ohdsi.webapi.jdbcUrl" $ }}
            - name: FLYWAY_DATASOURCE_USERNAME
              value: {{ .db.username }}
            - name: FLYWAY_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "ohdsi.webapi.db-secret-name" $ }}
                  {{- if .db.existingSecret }}
                  key: {{ .db.existingSecretKey }}
                  {{- else }}
                  key: "postgresql-password"
                  {{- end }}
          {{- if .extraEnv }}
          {{- toYaml .extraEnv | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /WebAPI/info
              port: http
            initialDelaySeconds: {{ .readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .readinessProbe.timeoutSeconds }}
            successThreshold: {{ .readinessProbe.successThreshold }}
            failureThreshold: {{ .readinessProbe.failureThreshold }}
          startupProbe:
            httpGet:
              path: /WebAPI/info
              port: http
            initialDelaySeconds: {{ .startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .startupProbe.periodSeconds }}
            timeoutSeconds: {{ .startupProbe.timeoutSeconds }}
            successThreshold: {{ .startupProbe.successThreshold }}
            failureThreshold: {{ .startupProbe.failureThreshold }}
          livenessProbe:
            httpGet:
              path: /WebAPI/info
              port: http
            initialDelaySeconds: {{ .livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .livenessProbe.timeoutSeconds }}
            successThreshold: {{ .livenessProbe.successThreshold }}
            failureThreshold: {{ .livenessProbe.failureThreshold }}
          resources:
            {{- toYaml .resources | nindent 12 }}
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
      {{- with .nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: tmp-volume
          emptyDir: {}
{{- end }}
{{- end }}
