{{- with .Values.atlas }}
{{- if .enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ohdsi.fullname" $ }}-atlas
  labels:
    {{- include "ohdsi.labels" $ | nindent 4 }}
    app.kubernetes.io/name: {{ include "ohdsi.name" $ }}-atlas
    app.kubernetes.io/instance: {{ $.Release.Name }}-atlas
  {{- with $.Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "ohdsi.name" $ }}-atlas
      app.kubernetes.io/instance: {{ $.Release.Name }}-atlas
  template:
    metadata:
    {{- with $.Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "ohdsi.name" $ }}-atlas
        app.kubernetes.io/instance: {{ $.Release.Name }}-atlas
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .podSecurityContext}}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: atlas
          {{- with .securityContext}}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .image.registry }}/{{ .image.repository }}:{{ .image.tag }}"
          imagePullPolicy: {{ .image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /atlas/
              port: http
            initialDelaySeconds: {{ .livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .livenessProbe.timeoutSeconds }}
            successThreshold: {{ .livenessProbe.successThreshold }}
            failureThreshold: {{ .livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: /atlas/
              port: http
            initialDelaySeconds: {{ .readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .readinessProbe.timeoutSeconds }}
            successThreshold: {{ .readinessProbe.successThreshold }}
            failureThreshold: {{ .readinessProbe.failureThreshold }}
          {{- with .resources}}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            {{- if .webApiUrl }}
            - name: WEBAPI_URL
              value: {{ .webApiUrl }}
            {{- else if (and .constructWebApiUrlFromIngress $.Values.ingress.enabled) }}
            - name: WEBAPI_URL
              {{- $host := (index $.Values.ingress.hosts 0) }}
              value: http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}/WebAPI
            {{- else }}
            - name: WEBAPI_URL
              value: ""
            {{- end }}
          {{- if .extraEnv }}
          {{- toYaml .extraEnv | nindent 12 }}
          {{- end }}
          {{- if .config.local }}
          volumeMounts:
            - name: atlas-config
              mountPath: /usr/share/nginx/html/atlas/js/config-local.js
              subPath: config-local.js
          {{- end }}
      {{- with .nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .config.local }}
      volumes:
        - name: atlas-config
          configMap:
            name: {{ include "ohdsi.fullname" $ }}-atlas-config
      {{- end }}
{{- end }}
{{- end }}
