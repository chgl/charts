{{- with .Values.atlas }}
{{- if .enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ohdsi.fullname" $ }}-atlas
  labels:
    {{- include "ohdsi.labels" $ | nindent 4 }}
    app.kubernetes.io/component: atlas
  {{- with $.Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .replicaCount }}
  selector:
    matchLabels:
      {{- include "ohdsi.matchLabels" $ | nindent 6 }}
      app.kubernetes.io/component: atlas
  template:
    metadata:
      annotations:
        {{- if .config.local }}
        checksum/config: {{ include (print $.Template.BasePath "/atlas-config-cm.yaml") $ | sha256sum | quote }}
        {{- end }}
        {{- with .podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "ohdsi.labels" $ | nindent 8 }}
        app.kubernetes.io/component: atlas
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ohdsi.atlas.serviceAccountName" $ }}
      automountServiceAccountToken: {{ .serviceAccount.automountServiceAccountToken }}
      {{- if $.Values.webApi.enabled }}
      initContainers:
        - name: wait-for-webapi
          image: "{{ $.Values.curl.image.registry }}/{{ $.Values.curl.image.repository }}:{{ $.Values.curl.image.tag }}"
          imagePullPolicy: IfNotPresent
          {{- with $.Values.restrictedContainerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: WEBAPI_BASE_URL
              value: "http://{{ include "ohdsi.fullname" $ }}-webapi:{{ $.Values.webApi.service.port }}/WebAPI"
          command: ["/bin/sh", "-c"]
          args:
            - |
              until [ "$(curl -s -o /dev/null -L -w '%{http_code}' "$WEBAPI_BASE_URL/info")" == "200" ]; do
                echo "$(date): Waiting for FHIR server @ $WEBAPI_BASE_URL to be up";
                sleep 10;
              done;
      {{- end }}
      containers:
        - name: atlas
          {{- with .securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .image.registry }}/{{ .image.repository }}:{{ .image.tag }}"
          imagePullPolicy: {{ .image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          {{- with .livenessProbe }}
          livenessProbe:
            httpGet:
              path: /atlas/
              port: http
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            successThreshold: {{ .successThreshold }}
            failureThreshold: {{ .failureThreshold }}
          {{- end }}
          {{- with .readinessProbe }}
          readinessProbe:
            httpGet:
              path: /atlas/
              port: http
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            successThreshold: {{ .successThreshold }}
            failureThreshold: {{ .failureThreshold }}
          {{- end }}
          {{- if .resources }}
          resources: {{- toYaml .resources | nindent 12 }}
          {{- else if ne .resourcesPreset "none" }}
          resources: {{- include "common.resources.preset" (dict "type" .resourcesPreset) | nindent 12 }}
          {{- end }}
          env:
            {{- if .webApiUrl }}
            - name: WEBAPI_URL
              value: {{ .webApiUrl }}
            {{- else if (and .constructWebApiUrlFromIngress $.Values.ingress.enabled) }}
            - name: WEBAPI_URL
              {{- $host := (index $.Values.ingress.hosts 0) }}
              value: http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}/WebAPI
            {{- else }}
            - name: WEBAPI_URL
              value: ""
            {{- end }}
          {{- if .extraEnv }}
          {{- toYaml .extraEnv | nindent 12 }}
          {{- end }}
          {{- if .config.local }}
          volumeMounts:
            - name: atlas-config
              mountPath: /usr/share/nginx/html/atlas/js/config-local.js
              subPath: config-local.js
          {{- end }}
      {{- with .nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .config.local }}
      volumes:
        - name: atlas-config
          configMap:
            name: {{ include "ohdsi.fullname" $ }}-atlas-config
      {{- end }}
{{- end }}
{{- end }}
