imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

postgresql:
  enabled: true
  image:
    tag: 13.1.0
    pullPolicy: Always
  postgresqlDatabase: "ohdsi"
  # Name of existing secret to use for PostgreSQL passwords.
  # The secret has to contain the keys `postgresql-password`
  # which is the password for `postgresqlUsername` when it is
  # different of `postgres`, `postgresql-postgres-password` which
  # will override `postgresqlPassword`, `postgresql-replication-password`
  # which will override `replication.password` and `postgresql-ldap-password`
  # which will be sed to authenticate on LDAP. The value is evaluated as a template.
  existingSecret: ""
  replication:
    # should be true for production use
    enabled: false
    readReplicas: 2
    synchronousCommit: "on"
    numSynchronousReplicas: 1
  metrics:
    # should also be true for production use
    enabled: false

webApi:
  enabled: true
  replicaCount: 1
  image:
    registry: ghcr.io
    repository: chgl/ohdsi/webapi
    tag: 2.8.0-snapshot
    pullPolicy: Always

  db:
    host: "db"
    port: 5432
    database: "ohdsi"
    username: "postgres"
    password: "postgres"
    # name of an existing secret containing the password to the DB.
    existingSecret: ""
    # name of the key in `webApi.db.existingSecret` to use as the password to the DB.
    existingSecretKey: "postgresql-postgres-password"

  podAnnotations: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 101

  service:
    type: ClusterIP
    port: 8080

  ingress:
    enabled: false
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths: ["/WebAPI"]
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  readinessProbe:
    failureThreshold: 5
    initialDelaySeconds: 45
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 15
  # currentyl disabled due to the potentially large time the migration may take
  # we can use startupProbe starting in k8s 1.20
  # livenessProbe:
  #   failureThreshold: 5
  #   initialDelaySeconds: 30
  #   periodSeconds: 15
  #   successThreshold: 1
  #   timeoutSeconds: 15

  nodeSelector: {}

  tolerations: []

  affinity: {}

  # extra environment variables
  extraEnv:
    []
    # - name: "TEST"
    #   value: "TEST"

atlas:
  enabled: true
  replicaCount: 1
  image:
    registry: ghcr.io
    repository: chgl/ohdsi/atlas
    tag: 2.8.0
    pullPolicy: Always

  # the base URL of the OHDSI WebAPI, e.g. https://example.com/WebAPI
  # if this value is not set but `webapi.ingress.enabled=true`, then this
  # URL is constructed from `webapi.ingress`
  webApiUrl: ""

  podAnnotations: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 101

  service:
    type: ClusterIP
    port: 8080

  ingress:
    enabled: false
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths: ["/atlas"]
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  readinessProbe:
    failureThreshold: 5
    initialDelaySeconds: 30
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 15
  livenessProbe:
    failureThreshold: 5
    initialDelaySeconds: 30
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 15

  nodeSelector: {}

  tolerations: []

  affinity: {}

  # extra environment variables
  extraEnv:
    []
    # - name: "TEST"
    #   value: "TEST"

# by default, Achilles connects to the same DB that the WebAPI uses
# this assumes that it contains both the WebAPI schema (`ohdsi`) as well
# as any CDM schemas. Future versions may allow for more flexibility here.
achilles:
  enabled: false
  schedule: "@daily"
  image:
    registry: ghcr.io
    repository: chgl/ohdsi/achilles
    tag: master
    pullPolicy: Always
  schemas:
    cdm: "synpuf_cdm"
    vocab: "synpuf_vocab"
    res: "synpuf_results"
  cdmVersion: "5.3.1"

  securityContext:
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 10001
