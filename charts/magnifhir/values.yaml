serviceMonitor:
  # -- if enabled, creates a ServiceMonitor instance for Prometheus Operator-based monitoring
  enabled: false
  # -- additional labels to apply to the ServiceMonitor object, e.g. `release: prometheus`
  additionalLabels: {}
  # namespace: monitoring
  # interval: 30s
  # scrapeTimeout: 10s

# -- number of replicas
replicaCount: 1

# -- the application image
# @ignored
image:
  registry: ghcr.io
  repository: chgl/magnifhir
  tag: v1.5.1@sha256:7bda7b65aacd07cf02b539f7c3b34273b892506b5ca631c936de9d26312cd6e6
  pullPolicy: IfNotPresent

# -- image pull secrets used by all pods
imagePullSecrets: []
# -- partially override the release name
nameOverride: ""
# -- fully override the release name
fullnameOverride: ""

# -- annotations applied to the server deployment
deploymentAnnotations: {}

# -- annotations applied to the server pod
podAnnotations: {}

# -- security context applied at the Pod level
podSecurityContext:
  {}
  # fsGroup: 2000

# @ignored
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65532
  runAsGroup: 65532
  seccompProfile:
    type: RuntimeDefault

service:
  # -- type of service
  type: ClusterIP
  # -- port for the web interface
  port: 8080
  metrics:
    # -- port for the metrics endpoint
    port: 8081

# -- specify resource requests and limits
resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- node labels for pods assignment
# see: <https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/>
nodeSelector: {}

# -- tolerations for pods assignment
# see: <https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/>
tolerations: []

# -- affinity for pods assignment
# see: <https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity>
affinity: {}

# -- pod topology spread configuration
# see: <https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#api>
topologySpreadConstraints:
  []
  # - maxSkew: 1
  #   topologyKey: topology.kubernetes.io/zone
  #   whenUnsatisfiable: ScheduleAnyway
  #   labelSelector:
  #     matchLabels:
  #       app.kubernetes.io/component: magnifhir
  #       app.kubernetes.io/instance: magnifhir

# -- readiness probe
# @ignored
readinessProbe:
  httpGet:
    path: /readyz
    port: http
  failureThreshold: 5
  initialDelaySeconds: 30
  periodSeconds: 20
  successThreshold: 1
  timeoutSeconds: 20

# -- liveness probe
# @ignored
livenessProbe:
  httpGet:
    path: /livez
    port: http
  failureThreshold: 5
  initialDelaySeconds: 30
  periodSeconds: 20
  successThreshold: 1
  timeoutSeconds: 20

# -- extra env vars to set on the magnifhir container
extraEnv: []
# - name: "FhirServers__0__Auth__Basic__Password"
#     valueFrom:
#       secretKeyRef:
#         name: "fhir-basic-auth-secret"
#         key: "password"

# -- provide an `appsettings` object to configure the `FhirServers` and other settings via JSON
# see <https://github.com/chgl/magniFHIR#configuration> for details.
appsettings:
  ""
  # |
  #  {
  #   "FhirServers": [
  #     {
  #       "Name": "HAPI FHIR JPA Server",
  #       "BaseUrl": "http://hapi-fhir-server.127.0.0.1.nip.io/fhir"
  #     },
  #     {
  #       "Name": "Linux4Health FHIR Server (empty)",
  #       "BaseUrl": "http://l4h-fhir-server.127.0.0.1.nip.io/fhir-server/api/v4",
  #       "Auth": {
  #         "Basic": {
  #           "Username": "fhiruser",
  #           "Password": "change-user-password"
  #         }
  #       }
  #     }
  #   ]
  # }

ingress:
  # -- if enabled, create an ingress resource to access the web ui
  enabled: false
  # -- name of the IngressClass resource to use for this ingress
  ingressClassName: ""
  # -- additional annotations for the Ingress resource
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: magnifhir.127.0.0.1.nip.io
      paths:
        - "/"
  # -- TLS configuration
  tls: []
  #  - secretName: magnifhir-example-tls
  #    hosts:
  #      - magnifhir.127.0.0.1.nip.io

# @ignored
curl: # +doc-gen:ignore
  image:
    registry: docker.io
    repository: curlimages/curl
    tag: 8.5.0@sha256:4bfa3e2c0164fb103fb9bfd4dc956facce32b6c5d47cc09fcec883ce9535d5ac

tests:
  # -- configure the test pods resource requests and limits
  resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
